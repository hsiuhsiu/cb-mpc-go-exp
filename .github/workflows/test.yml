name: Tests

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - "**/*.md"
      - "docs/**"
      - ".gitignore"
  pull_request:
    paths-ignore:
      - "**/*.md"
      - "docs/**"
      - ".gitignore"

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Build Docker image
        run: |
          echo "Building Docker image with custom OpenSSL..."
          make image

      - name: Run tests
        run: |
          echo "Running comprehensive tests in Docker container..."
          docker run --rm -v $(pwd):/workspace -w /workspace cb-mpc-go bash -c '
            set -euo pipefail

            echo "=== Building C++ library ==="
            cd cb-mpc
            make build
            cd ..

            echo "=== Downloading Go dependencies ==="
            bash scripts/go_with_cpp.sh go mod download
            bash scripts/go_with_cpp.sh go mod verify

            echo "=== Running Go tests ==="
            bash scripts/go_with_cpp.sh go test -v ./pkg/mpc ./internal/cgo

            echo "=== Building examples ==="
            bash scripts/go_with_cpp.sh go build ./examples/agree_random
            bash scripts/go_with_cpp.sh go build ./examples/ecdsa2pc_mtls

            echo "=== Running security tests (malicious party scenarios) ==="
            bash scripts/go_with_cpp.sh go test -v ./pkg/mpc -run "Malicious"

            echo "=== Running race detector tests ==="
            bash scripts/go_with_cpp.sh go test -race -short ./pkg/mpc ./internal/cgo

            echo "=== Static analysis with go vet ==="
            bash scripts/go_with_cpp.sh go vet ./...

            echo "âœ… All tests passed!"
          '